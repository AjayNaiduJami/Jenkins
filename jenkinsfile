pipeline {
    agent { label 'Node' }
    environment {
       build_no = "$BUILD_NUMBER"
    }
    stages {
        stage('GIT Clone') {
            steps {
                checkout([$class: 'GitSCM', 
                // $branch will be the variable which points the branch name via job parameter specified
                branches: [[name: '*/$branch']], 
                doGenerateSubmoduleConfigurations: false, 
                extensions: [[$class: 'CleanCheckout']], 
                submoduleCfg: [], 
                // credentialsId is the id of creds saved in jenkins
                // url will be the repo url of the code
                userRemoteConfigs: [[credentialsId: 'GIT', url: 'http://github.com/test.git']]])
            }
        }
        stage('Requirements') {
            steps {
                // Will install the requirements
                sh 'npm install -g newman'
            }
        }
        stage('NPM Install') {
            steps {
                // Install required npm modules
                sh 'npm install'
            }
        }
        stage('NPM Run') {
            steps {
                // will start the app in background
                sh 'nohup npm run start &'
            }
        }
        stage('API Test') {
            steps {
                // tests the app with below command and generates html result
                sh 'newman run test.postman_collection.json --environment Local.postman_environment.json --reporters cli,html --reporter-html-export Results/$BUILD_NUMBER_Dev-Report.html'
            }
            post {
                success {
                // publish html
                    publishHTML target: [
                        allowMissing: false,
                        alwaysLinkToLastBuild: false,
                        keepAll: true,
                        reportDir: 'Results',
                        reportFiles: '${env.build_no}_Dev-Report.html',
                        reportName: "API Test Report"
                    ]
                }
            }
        }
        stage('Clean Env') {
            steps {
                sh'''
                    echo Success
                '''
            }
        }              
    }
}